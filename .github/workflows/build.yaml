name: Build Training and Publish

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          submodules: recursive
      -
        name: Set up npm for linting
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      -
        name: Lint Markdown
        run: npm ci && npm run mdlint
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Quay.io Container Registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_TOKEN }}

      - name: Cache Hugo resources
        uses: actions/cache@v4
        with:
          path: resources
          key: resources
      -
        name: Build Latest Version (cache)
        uses: floryn90/actions-hugo@1.0.1
        with:
          version: 0.124.1
          image: ext-ubuntu
      -
        name: Build Latest Version
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            quay.io/acend/go-basics-training:pr-${{ github.event.pull_request.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: 'Install Helm'
        uses: azure/setup-helm@v4
        with:
          version: v3.6.2
      -
        name: Install Kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.21.2
      -
        name: Create KUBECONFIG
        env:
          KUBE_CONFIG: '${{ secrets.KUBECONFIG_K8S_ACEND_TEST }}'
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBE_CONFIG" > $HOME/.kube/config
      -
        name: Deploy Helm Release
        env:
          TRAINING_HELM_RELEASE: 'pr-${{ github.event.pull_request.number }}'
          TRAINING_NAMESPACE: 'acend-go-basics-training-test'
          TRAINING_VERSION: '${{ github.sha }}'
        run: |
          helm upgrade $TRAINING_HELM_RELEASE acend-training-chart --install --wait --kubeconfig $HOME/.kube/config  --namespace=$TRAINING_NAMESPACE --set=app.name=$HELM_RELEASE --set=app.version=$TRAINING_VERSION --repo=https://acend.github.io/helm-charts/ --values=helm-chart/values.yaml --atomic --history-max 1
      -
        name: Redeploy Deployments
        env:
          TRAINING_HELM_RELEASE: 'pr-${{ github.event.pull_request.number }}'
          TRAINING_HELM_NAME: 'acend-go-basics-training'
          TRAINING_NAMESPACE: 'acend-go-basics-training-test'
        run: |
          kubectl rollout restart deployment/${TRAINING_HELM_RELEASE}-${TRAINING_HELM_NAME}-acend --kubeconfig $HOME/.kube/config --namespace $TRAINING_NAMESPACE
      -
        name: Comment PR Environments in PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
           PR Environments:
           * acend version <https://go-basics-pr-${{ github.event.pull_request.number }}.training.acend.ch>
